name: Hello World Map

on:
  issues:
    types: [opened, labeled, reopened, edited]

jobs:
  handle-hi:
    runs-on: ubuntu-latest
    if: >
      (startsWith(github.event.issue.title, 'hello|') || startsWith(github.event.issue.title, 'hi|')) &&
      !endsWith(github.event.issue.user.login, '[bot]')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Format issue title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          npm i node-fetch@2 --silent
          node scripts/format-issue-title.js

      - name: Ensure data + template exist
        run: node scripts/ensure-data-template.js

      - name: Update visitors.json and README (v3 schema)
        env:
          ACTOR: ${{ github.event.issue.user.login }}
          TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          node scripts/update-visitors-and-readme.js

      - name: Build choropleth world map SVG
        run: |
          npm i d3-geo xmldom node-fetch@2 --silent
          node scripts/build-svg-world-map.js

      - name: Commit changes (if any)
        env:
          ACTOR: ${{ github.event.issue.user.login }}
          TITLE: ${{ github.event.issue.title }}
        run: |
          if [ -s /tmp/changed.flag ]; then
            # Parse ISO from title like: "ðŸ‡¹ðŸ‡· hello|TR - @user says hi"
            ISO=$(echo "$TITLE" | sed -E 's/^.*hello\|([A-Z]{2}).*/\1/' | tr '[:lower:]' '[:upper:]')
            
            # Export ISO so Node can access it
            export ISO
            
            # Compute flag emoji in Node (safe & short)
            FLAG=$(node -e 'const A=0x1F1E6;const iso=(process.env.ISO||"").toUpperCase();if(/^[A-Z]{2}$/.test(iso)){const f=String.fromCodePoint(A+(iso.charCodeAt(0)-65))+String.fromCodePoint(A+(iso.charCodeAt(1)-65));console.log(f)}')
            
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A

            MSG="ðŸ‘‹ from ${FLAG:-$ISO} by @${ACTOR}"
            git commit -m "$MSG"
            git push
          else
            echo "No changes to commit"
          fi

      - name: Thank, label, and close
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CHANGED=$(test -s /tmp/changed.flag && echo "yes" || echo "no")
          if [ "$CHANGED" = "yes" ]; then
            gh issue comment ${{ github.event.issue.number }} \
              --body "Thanks @${{ github.event.issue.user.login }}! Added your hello from **${{ github.event.issue.title }}**. The map & stats are updated. âœ¨"
          else
            gh issue comment ${{ github.event.issue.number }} \
              --body "Hey @${{ github.event.issue.user.login }} â€” your selection didn't change anything (same country as before or limit reached)."
          fi
          gh issue close ${{ github.event.issue.number }} --comment "Closed automatically âœ…"
