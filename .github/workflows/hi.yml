jobs:
  handle-hi:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'hi|') && contains(github.event.issue.labels.*.name, 'country-claim') && !endsWith(github.event.issue.user.login, '[bot]')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Update ledger and README
        id: update
        run: |
          node - <<'NODE'
          const fs = require('fs');

          const ACTOR = process.env.ACTOR;
          const TITLE = process.env.TITLE;
          const ISO = TITLE.split('|')[1]?.trim()?.toUpperCase();
          if(!ISO || !/^[A-Z]{2}$/.test(ISO)) {
            console.log('Bad ISO'); process.exit(0);
          }

          const dataPath = 'data/visitors.json';
          const raw = fs.existsSync(dataPath) ? JSON.parse(fs.readFileSync(dataPath,'utf8')) : {countries:{}, firstVisitor:{}, byUser:{}, updatedAt:""};
          raw.countries ||= {}; raw.firstVisitor ||= {}; raw.byUser ||= {};

          const user = raw.byUser[ACTOR] || {count:0,last:null,firstAt:null};
          // limit: 1 initial + 1 change (max 2 writes)
          if (user.count >= 2) {
            fs.writeFileSync('/tmp/noop','1'); // signal later
          } else {
            // ignore same-country repeat
            if (user.last !== ISO) {
              raw.countries[ISO] = (raw.countries[ISO]||0) + 1;
              if (!raw.firstVisitor[ISO]) raw.firstVisitor[ISO] = ACTOR;
              user.count += 1; user.last = ISO; if (!user.firstAt) user.firstAt = new Date().toISOString();
              raw.byUser[ACTOR] = user;
              raw.updatedAt = new Date().toISOString();
              fs.writeFileSync(dataPath, JSON.stringify(raw, null, 2));
            } else {
              fs.writeFileSync('/tmp/noop','1');
            }
          }

          // Build README from template (simple injection)
          const tpl = fs.readFileSync('README.tpl.md','utf8');
          const countries = Object.entries(raw.countries).sort((a,b)=> b[1]-a[1]);
          const totalHellos = countries.reduce((s, [,c])=>s+c, 0);
          const totalCountries = countries.length;

          const table = ['| Country | Hellos | First |','|---|---:|---|', ...countries.map(([iso,count])=>{
            const first = raw.firstVisitor[iso] ? `@${raw.firstVisitor[iso]}` : 'â€”';
            return `| ${iso} | ${count} | ${first} |`;
          })].join('\n');

          const out = tpl
            .replace('{{TOTAL_COUNTRIES}}', String(totalCountries))
            .replace('{{TOTAL_HELLOS}}', String(totalHellos))
            .replace('{{COUNTRY_TABLE}}', table)
            .replace('{{UPDATED_AT}}', raw.updatedAt || new Date().toISOString());

          fs.writeFileSync('README.md', out);
          NODE
        env:
          ACTOR: ${{ github.event.issue.user.login }}
          TITLE: ${{ github.event.issue.title }}

      - name: Commit changes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "world-hi: update by ${{ github.event.issue.user.login }}" || echo "No changes to commit"
          git push || true

      - name: Thank and close
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MSG="Thanks @${{ github.event.issue.user.login }}!"
          if [ -f /tmp/noop ]; then
            MSG="$MSG Your selection didn't change anything (limit reached or same country)."
          else
            MSG="$MSG Added your hello from **${{ github.event.issue.title##hi| }}**. The map & stats are updated."
          fi
          gh issue comment ${{ github.event.issue.number }} --body "$MSG"
          gh issue close   ${{ github.event.issue.number }}
